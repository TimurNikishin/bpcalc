name: CI-CD-Pipeline-to-AWS-ElasticBEanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME  :  "tn-tud-csd-ca1-bpcalc-packages"
  EB_APPLIACTION_NAME_QA     :  "bpcalc-app-qa"
  EB_ENVIRONMENT_NAME_QA     :  "bpcalc-app-qa-env"
  DEPLOY_PACKAGE_NAME        :  "bpcalc_app_${{ github.sha }}.zip"
  AWS_REGION_NAME            :  "eu-west-1"
  
on:
  #workflow_dispatch:
  push:
    branches:
      - main
jobs:
  CI_part:
    runs-on: ubuntu-latest

    steps:
    - name: Git clone
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: critical
        base-ref: refs/heads/main~1
        head-ref: refs/heads/main       
    
    - name: Code Analysis with SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Set up Python for Unit Testing
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"   

    - name: Install dependencies
      run: python -m pip install pytest flask

    - name: Run Unit tests
      run: pytest

    - name: Create ZIP deployment package
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git* "UnitTest/*" ".pytest*"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id      :  ${{ secrets.TN_AWS_ACCESS_KEY }}
        aws-secret-access-key  :  ${{ secrets.TN_AWS_SECRET_KEY }}
        aws-region             :  ${{ env.AWS_REGION_NAME }}

    - name: Copy Deployment package to S3 bucket
      run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

  CD_part_QA:
    runs-on: ubuntu-latest
    needs  : [CI_part]

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id      :  ${{ secrets.TN_AWS_ACCESS_KEY }}
          aws-secret-access-key  :  ${{ secrets.TN_AWS_SECRET_KEY }}
          aws-region             :  ${{ env.AWS_REGION_NAME }}
      
      - name: QA - Create new Elastic Beanstalk Application Version
        run : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLIACTION_NAME_QA }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME}}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"

      - name: QA - Deploy new Elastic Beanstalk Application Version 
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME_QA }} --version-label "Ver-${{ github.sha }}"
