name: CI-CD-Pipeline-to-AWS-ElasticBEanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME  :  "tn-tud-csd-ca1-bpcalc-packages"
  EB_APPLIACTION_NAME_QA     :  "bpcalc-app-qa"
  EB_ENVIRONMENT_NAME_QA     :  "bpcalc-app-qa-env"
  #DEPLOY_PACKAGE_NAME        :  "bpcalc_app_${{ github.sha }}.zip"
  AWS_REGION_NAME            :  "eu-west-1"
  
on:
  #workflow_dispatch:
  push:
    branches:
      - main

jobs:
  CI_part:
    runs-on: ubuntu-latest
    steps:
    - name: Set DEPLOY_PACKAGE_NAME as env variable
      run: echo "DEPLOY_PACKAGE_NAME=bpcalc_app_$(date +'%Y-%m-%d-%H-%M-%S').zip" >> $GITHUB_ENV

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: critical
        base-ref: refs/heads/main~1
        head-ref: refs/heads/main       
    
    - name: Code Analysis with SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Set up Python for Unit Testing
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"   

    - name: Install dependencies
      run: python -m pip install pytest flask

    - name: Run Unit tests
      run: pytest

    - name: Build deployment package
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git* "UnitTest/*" ".pytest*"
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Deployment_Package
        path: ${{ env.DEPLOY_PACKAGE_NAME }}
        retention-days: 5  

  CD_part_QA:
    runs-on: ubuntu-latest
    needs  : [CI_part]

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: Deployment_Package

      - name: QA Deployment in AWS
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key:     ${{ secrets.TN_AWS_ACCESS_KEY }}
          aws_secret_key:     ${{ secrets.TN_AWS_SECRET_KEY }}
          region:             ${{ env.AWS_REGION_NAME }}
          application_name:   ${{ env.EB_APPLIACTION_NAME_QA }}
          environment_name:   ${{ env.EB_ENVIRONMENT_NAME_QA }}
          version_label:      "Ver-${{ github.sha }}"
          deployment_package: ${{ env.DEPLOY_PACKAGE_NAME }}  
