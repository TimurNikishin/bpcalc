name: CI/CD-Delivery


env:
  EB_STAGING_ENV             :  ""
  APP_VERSION                :  "Ver-${{ github.sha }}"


on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  CI_part:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: critical
        base-ref: refs/heads/main~1
        head-ref: refs/heads/main       
    
    - name: Code Analysis with SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Set up Python for Unit Testing
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"   

    - name: Install dependencies
      run: python -m pip install pytest flask

    - name: Run Unit tests
      run: pytest

    - name: Build deployment package
      run : zip -r deploy.zip ./ -x *.git* "UnitTest/*" ".pytest*"
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Deployment_Package
        path: ${{ vars.DEPLOY_PACKAGE_NAME }}
        retention-days: 5  

  CD_part_QA:
    runs-on: ubuntu-latest
    needs  : [CI_part]
    steps:

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: Deployment_Package      

      - name: QA Deployment in AWS
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key:     ${{ secrets.TN_AWS_ACCESS_KEY }}
          aws_secret_key:     ${{ secrets.TN_AWS_SECRET_KEY }}
          region:             ${{ vars.AWS_REGION_NAME }}
          application_name:   ${{ vars.EB_APPLIACTION_NAME }}
          environment_name:   ${{ vars.EB_ENVIRONMENT_NAME_QA }}
          version_label:      ${{ env.APP_VERSION }}
          deployment_package: ${{ vars.DEPLOY_PACKAGE_NAME }}
    
  CD_part_Staging:
    runs-on: ubuntu-latest
    needs  : [CD_part_QA]

    steps:
      - name: Configure AWS access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id      :  ${{ secrets.TN_AWS_ACCESS_KEY }}
          aws-secret-access-key  :  ${{ secrets.TN_AWS_SECRET_KEY }}
          aws-region             :  ${{ vars.AWS_REGION_NAME }}

      - name: Detect current staging environment
        run: echo "EB_STAGING_ENV=$(aws elasticbeanstalk describe-environments --query "Environments[?CNAME=='${{ vars.EB_STAGING_DOMAIN }}'].EnvironmentName" --output text)" >> $GITHUB_ENV
        
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: Deployment_Package

      - name: Staging Deployment in AWS
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_STAGING_ENV }} --version-label ${{ env.APP_VERSION }}
  
  CD_part_Testing:
    runs-on: ubuntu-latest
    needs  : [CD_part_Staging]
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python for testing
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: python -m pip install selenium



         
         
            
  
